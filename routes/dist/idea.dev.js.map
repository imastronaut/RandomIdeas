{"version":3,"sources":["idea.js"],"names":["express","require","router","Router","Idea","ideas","id","text","tag","username","date","get","req","res","find","json","success","data","console","log","status","error","findById","params","idea","post","body","save","savedIdea","put","findByIdAndUpdate","$set","updatedIdea","findByIdAndDelete","deletedIdea","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\r\n\r\nconst router = express.Router();\r\n\r\nconst Idea = require('../models/Idea')\r\n\r\n\r\nconst ideas = [\r\n    {\r\n      id: 1,\r\n      text: 'Positive NewsLetter, a newsletter that only shares positive, uplifting news',\r\n      tag: 'Technology',\r\n      username: 'TonyStark',\r\n      date: '2022-01-02',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Milk cartons that turn a different color the older that your milk is getting',\r\n      tag: 'Inventions',\r\n      username: 'SteveRogers',\r\n      date: '2022-01-02',\r\n    },\r\n    {\r\n      id: 3,\r\n      text: 'ATM location app which lets you know where the closest ATM is and if it is in service',\r\n      tag: 'Software',\r\n      username: 'BruceBanner',\r\n      date: '2022-01-02',\r\n    },\r\n];\r\n\r\n\r\n\r\n\r\nrouter.get('/', async(req,res)=>{\r\n    try{\r\n        const ideas = await Idea.find();\r\n        res.json({success:true,data:ideas})\r\n    } catch(error){\r\n        console.log(error);\r\n        res.status(500).json({success:true, error: \"Something went wrong\"})\r\n    }\r\n})\r\n\r\nrouter.get('/:id', async(req,res)=>{\r\n    try{\r\n        const idea = await Idea.findById(req.params.id);\r\n        res.json({success:true,data:idea});\r\n    } catch(error){\r\n        console.log(error);\r\n        res.status(500).json({success:true,error:\"Something went wrong\"})\r\n    }\r\n    \r\n})\r\n\r\nrouter.post('/', async(req,res)=>{\r\n    const idea = new Idea ({\r\n        text : req.body.text,\r\n        tag : req.body.tag,\r\n        username : req.body.username,\r\n    })\r\n    try{\r\n        const savedIdea = await idea.save();\r\n        res.json({success:true,data:savedIdea})\r\n    } catch(error){\r\n        console.log(error);\r\n        res.status(500).json({success:false,error:\"Something went wrong\"})\r\n    }\r\n})\r\n\r\nrouter.put('/:id', async(req,res)=>{\r\n    try{\r\n        const idea = await Idea.findById(req.params.id);\r\n        if(idea.username === req.body.username){\r\n            const updatedIdea = await Idea.findByIdAndUpdate(req.params.id,{\r\n                $set:{\r\n                    text: req.body.text,\r\n                    tag: req.body.tag\r\n                }\r\n            },{new:true})\r\n            return res.json({success:true,data:updatedIdea})\r\n        }\r\n        res.status(403).json({success:false,error: \"You are not authorized to update this idea\"})\r\n        \r\n    } catch(error){\r\n        console.log(error); \r\n        res.status(500).json({success:false,error:\"Something went wrong\"})\r\n    }\r\n})\r\n\r\nrouter.delete('/:id', async(req,res)=>{\r\n\r\n    try{\r\n        const idea = await Idea.findById(req.params.id);\r\n        if(idea.username === req.body.username){\r\n            const deletedIdea = await Idea.findByIdAndDelete(req.params.id);\r\n            return res.json({success:true,data:deletedIdea})\r\n        }\r\n        res.status(403).json({success:false,error:\"You are not authroized to delete this idea\"})\r\n        \r\n    }catch(error){\r\n        console.log(error);\r\n        res.json({success:false,error:\"Something went wrong\"})\r\n    }\r\n})\r\nmodule.exports = router;"],"file":"idea.dev.js"}