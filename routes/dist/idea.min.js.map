{"version":3,"sources":["idea.js"],"names":["express","require","Router","router","ideas","id","text","tag","username","date","get","req","res","_ideas","regeneratorRuntime","async","_context","prev","next","awrap","Idea","find","sent","json","success","data","t0","log","error","stop","idea","_context2","findById","params","console","post","savedIdea","_context3","body","save","status","put","updatedIdea","_context4","findByIdAndUpdate","new","abrupt","deletedIdea","_context5","findByIdAndDelete"],"mappings":"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","file":"idea.min.js","sourcesContent":["const express = require('express');\r\n\r\nconst router = express.Router();\r\n\r\nconst Idea = require('../models/Idea')\r\n\r\n\r\nconst ideas = [\r\n    {\r\n      id: 1,\r\n      text: 'Positive NewsLetter, a newsletter that only shares positive, uplifting news',\r\n      tag: 'Technology',\r\n      username: 'TonyStark',\r\n      date: '2022-01-02',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Milk cartons that turn a different color the older that your milk is getting',\r\n      tag: 'Inventions',\r\n      username: 'SteveRogers',\r\n      date: '2022-01-02',\r\n    },\r\n    {\r\n      id: 3,\r\n      text: 'ATM location app which lets you know where the closest ATM is and if it is in service',\r\n      tag: 'Software',\r\n      username: 'BruceBanner',\r\n      date: '2022-01-02',\r\n    },\r\n];\r\n\r\n\r\n\r\n\r\nrouter.get('/', async(req,res)=>{\r\n    try{\r\n        const ideas = await Idea.find();\r\n        res.json({success:true,data:ideas})\r\n    } catch(error){\r\n        console.log(error);\r\n        res.status(500).json({success:true, error: \"Something went wrong\"})\r\n    }\r\n})\r\n\r\nrouter.get('/:id', async(req,res)=>{\r\n    try{\r\n        const idea = await Idea.findById(req.params.id);\r\n        res.json({success:true,data:idea});\r\n    } catch(error){\r\n        console.log(error);\r\n        res.status(500).json({success:true,error:\"Something went wrong\"})\r\n    }\r\n    \r\n})\r\n\r\nrouter.post('/', async(req,res)=>{\r\n    const idea = new Idea ({\r\n        text : req.body.text,\r\n        tag : req.body.tag,\r\n        username : req.body.username,\r\n    })\r\n    try{\r\n        const savedIdea = await idea.save();\r\n        res.json({success:true,data:savedIdea})\r\n    } catch(error){\r\n        console.log(error);\r\n        res.status(500).json({success:false,error:\"Something went wrong\"})\r\n    }\r\n})\r\n\r\nrouter.put('/:id', async(req,res)=>{\r\n    try{\r\n        const idea = await Idea.findById(req.params.id);\r\n        if(idea.username === req.body.username){\r\n            const updatedIdea = await Idea.findByIdAndUpdate(req.params.id,{\r\n                $set:{\r\n                    text: req.body.text,\r\n                    tag: req.body.tag\r\n                }\r\n            },{new:true})\r\n            return res.json({success:true,data:updatedIdea})\r\n        }\r\n        res.status(403).json({success:false,error: \"You are not authorized to update this idea\"})\r\n        \r\n    } catch(error){\r\n        console.log(error); \r\n        res.status(500).json({success:false,error:\"Something went wrong\"})\r\n    }\r\n})\r\n\r\nrouter.delete('/:id', async(req,res)=>{\r\n\r\n    try{\r\n        const idea = await Idea.findById(req.params.id);\r\n        if(idea.username === req.body.username){\r\n            const deletedIdea = await Idea.findByIdAndDelete(req.params.id);\r\n            return res.json({success:true,data:deletedIdea})\r\n        }\r\n        res.status(403).json({success:false,error:\"You are not authroized to delete this idea\"})\r\n        \r\n    }catch(error){\r\n        console.log(error);\r\n        res.json({success:false,error:\"Something went wrong\"})\r\n    }\r\n})\r\nmodule.exports = router;"]}